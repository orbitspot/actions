name: 'Parameter Store'
description: 'Parameter store'
inputs:
  keys:
    description: 'Environment Keys'
    required: true
  environment_json:
    description: 'environment values'
    required: true
  file_name:
    description: 'file name'
    required: true
  encrypt:
    description: 'file name'
    required: false
runs:
  using: composite
  steps:
  - name: Generate JSON and set output
    shell: python
    run: |
        keys = ${{ inputs.keys }}
        variables = ${{ inputs.environment_json }}
        result_json = {}
        for key in keys:
          value = variables[key]
          value = value.replace("$", "$$")
          result_json.update({key: value}) 
        print(result_json)
        f = open(f"${{ inputs.file_name }}.json", "a")
        f.write(result_json)
        f.close()

  - name: Upload encrypted artifact
    uses: actions/upload-artifact@v4
    with:
      name: ${{ inputs.file_name }}
      path: ${{ inputs.file_name }}.json
      retention-days: 1

        # keys=$(echo $keys | sed 's/^\[\|]$//g')

        # # JSON contendo todas as variáveis de vars
        # vars_json='${{ inputs.environment_json }}'

        # # Inicializa o JSON
        # result_json="{"

        # # Converte a string em um array
        # IFS=',' read -r -a array <<< "$keys"

        # # Itera sobre os elementos do array
        # for index in "${!array[@]}"; do
        #     key=$(echo "${array[$index]}" | tr -d '"') # Remove aspas
        #     value=$(echo "$vars_json" | jq -r ".\"$key\" // empty") # Obtém o valor da chave

        #     # Só adiciona se o valor não estiver vazio
        #     if [ -n "$value" ]; then
        #         # Adiciona ao JSON
        #         result_json="$result_json\"$key\":\"$value\","
        #     fi
        # done

        # # Remove a última vírgula e fecha o JSON
        # result_json=$(echo "$result_json" | sed 's/,$//')
        # result_json="$result_json}"
      
        # # Debug para verificar o JSON gerado
        # echo "Generated JSON: $result_json"
      
        # # Define o output do step
        # echo "$result_json" >> ${{ inputs.file_name }}.json