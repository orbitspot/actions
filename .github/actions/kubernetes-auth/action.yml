name: 'Kubernetes authenticate'
description: 'Generate kube config file'
inputs:
  s3_chart_location:
    description: 'S3 template location'
    required: false
    default: 's3://devops.orbitspot.com/charts/'
  cluster_name: 
    description: 'Cluster Name'
    required: true
runs:
  using: composite
  steps:
  - name: configure aws credentials
    uses: aws-actions/configure-aws-credentials@v4
    with:
      role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_NUMBER }}:role/${{ env.AWS_ROLE_NAME }}
      role-session-name: ${{ env.AWS_ROLE_NAME }}
      aws-region: ${{ env.AWS_REGION }}

  - name: Install kubectl
    shell: bash
    run: |
      aws s3 cp s3://continuous-integration-files/binaries/kubectl/1.21/bin ./kubectl
      chmod +x ./kubectl
      sudo mv ./kubectl /usr/local/bin/

  - name: Install aws-iam-authenticator
    shell: bash
    run: |
      aws s3 cp s3://continuous-integration-files/binaries/aws-iam-authenticator/bin ./aws-iam-authenticator
      chmod +x ./aws-iam-authenticator
      sudo mv ./aws-iam-authenticator /usr/local/bin/

  - name: Set up Helm
    uses: azure/setup-helm@v4

  - name: Cache Helm plugins
    id: cache-helm-plugins
    uses: actions/cache@v4
    with:
      path: ~/.local/share/helm/plugins/
      key: ${{ runner.os }}-helm-plugins-${{ hashFiles('role.json') }}
      restore-keys: |
        ${{ runner.os }}-helm-plugins-

  - name: Install Plugins Helm Git
    shell: bash
    run: |
      if ! helm plugin list | grep -q "helm-git"; then
        helm plugin install https://github.com/aslafy-z/helm-git.git
      else
        echo "helm-git plugin already installed"
      fi

  - name: Install Plugins Helm s3
    shell: bash
    run: |
      if ! helm plugin list | grep -q "helm-s3"; then
        helm plugin install https://github.com/hypnoglow/helm-s3.git
      else
        echo "helm-s3 plugin already installed"
      fi

  - name: Add Helm repository
    shell: bash
    run: helm repo add orbitspot ${{ inputs.s3_chart_location }}

  - name: update-k8s-config
    shell: bash
    env:
      AWS_REGION: ${{ env.AWS_REGION }}
      CLUSTER_NAME: ${{ inputs.cluster_name }}
    run: |
      echo "ClusterName: $CLUSTER_NAME"
      echo "Region: $AWS_REGION"
       aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
