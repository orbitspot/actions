name: 'Parameter Store'
description: 'Parameter store'
inputs:
  secrets:
    description: 'secrets'
    required: true
  vars:
    description: 'vars'
    required: true
runs:
  using: composite
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x

    - name: Generate JSON and set output
      shell: python
      run: |
          import yaml

          vars = ${{ inputs.vars }}
          secrets = ${{ inputs.secrets }}
          devops_variables = ['CLUSTER_REGION', 'ENV', 'CLUSTER_NAME', 'ACCESS_KEY_CODE_ARTIFACT', 'GIT_TOKEN', 'PARAMETERS_ENCRYPT_HASH', 'SECRET_ACCESS_KEY_CODE_ARTIFACT', 
                              'API_GATEWAY', 'DEVOPS_CONFIG', '_DEVOPS_CONFIG', 'github_token', 'AWS_ACCOUNT_NUMBER', 'AWS_ROLE_NAME', 'ISTIO_HOST', 'TERRAFORM_BUCKET', '_PROPERTIES', '_POLICY_JSON']
          result_variables = []
          for key in vars:
            if len(vars[key]) > 0 and key not in devops_variables:
              result_variables.append({"context": "ssmparameter", "name": f'${{ github.event.repository.name }}/environment/{key}'}) 

          result_secrets = []
          for key in secrets:
            if len(secrets[key]) > 0 and key not in devops_variables:
              result_secrets.append({"context": "ssmparameter", "name": f'${{ github.event.repository.name }}/secret/{key}'}) 

          with open(f"variables.yaml", "w") as outfile:
            yaml.dump(result_variables, outfile, default_flow_style=False)

          with open(f"variables.yaml", "a") as outfile:
            yaml.dump(result_secrets, outfile, default_flow_style=False)

    - name: Check file
      shell: bash
      run: |
        ls
        cat variables.yaml

    - name: Upload encrypted artifact
      uses: actions/upload-artifact@v4
      with:
        name: variables
        path: variables.yaml
        retention-days: 1
