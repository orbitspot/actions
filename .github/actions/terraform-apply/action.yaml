name: 'Terraform Apply'
description: 'terraform apply commands'
inputs:
  aws_account_number:
    description: 'Account Number'
    required: true
  aws_role_name:
    description: 'Aws role with polices to deploy'
    required: true
  aws_region:
    description: 'Aws region'
    required: true
  artifact_name:
    description: 'Artifact Name'
    required: true
    default: 'terraform'
  terraform_directory:
    description: 'Directory containing Terraform files'
    required: false
    default: ''

runs:
  using: composite
  steps:

  - name: configure aws credentials
    uses: aws-actions/configure-aws-credentials@v4
    with:
      role-to-assume: arn:aws:iam::${{ inputs.aws_account_number }}:role/${{ inputs.aws_role_name }}
      role-session-name: ${{ inputs.aws_role_name }}
      aws-region: ${{ inputs.aws_region }}

  - name: Set up Node.js
    uses: actions/setup-node@v4
    with:
        node-version: '20'

  - uses: hashicorp/setup-terraform@v3
    name: setup
    with:
        terraform_version: "1.5.0"

  - name: Download Artifact
    uses: actions/download-artifact@v4
    with:
      name: ${{ inputs.artifact_name }}

  - name: Show Files
    shell: bash
    run: |
      ls -ltra
  

  - name: Set permissions for Terraform providers
    shell: bash
    run: chmod -R +x .

  - name: Terraform Init
    shell: bash
    run: |
      ls -ltra
      terraform version
      terraform init -reconfigure -backend-config=bucket=terraform-orbit -backend-config=key=development/pdf-service/infrastructure.tfstate -backend-config=region=us-east-1 -no-color
      
  - name: Terraform Apply
    shell: bash
    if: ${{ inputs.terraform_directory != '' }}
    run: |
      cd ${{ inputs.terraform_directory }}
      terraform apply -auto-approve -no-color

  - name: Terraform Apply
    if: ${{ inputs.terraform_directory == '' }}
    shell: bash
    run: |
      terraform apply -auto-approve -no-color