name: 'Parameter Store'
description: 'Parameter store'
inputs:
  environment_json:
    description: 'environment values'
    required: true
  file_name:
    description: 'file name'
    required: true
runs:
  using: composite
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x

    - name: Generate JSON and set output
      shell: python
      run: |
          import json

          variables = ${{ inputs.environment_json }}
          devops_variables = ['CLUSTER_REGION', 'ENV', 'CLUSTER_NAME', 'ACCESS_KEY_CODE_ARTIFACT', 'GIT_TOKEN', 'PARAMETERS_ENCRYPT_HASH', 'SECRET_ACCESS_KEY_CODE_ARTIFACT', '_AWS_REGION',
                              'API_GATEWAY', 'DEVOPS_CONFIG', 'github_token', 'AWS_ACCOUNT_NUMBER', 'AWS_ROLE_NAME', 'ISTIO_HOST', 'TERRAFORM_BUCKET', 'API_HOST']
          result_json = {}
          for key in variables:
            value = variables[key].replace("$", "$$") # no terraform $$ Ã© o escapamento para o $ 
            if len(value) > 0 and key not in devops_variables and not key.startswith("_"): # nao adiciona variaveis sem valor e reservadas para DEVOPS
              result_json.update({key: value}) 

          print('**********************************************')
          print()
          print(result_json)
          print()
          with open(f"${{ inputs.file_name }}.json", "w") as outfile:
            json.dump(result_json, outfile)

    - name: Upload encrypted artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.file_name }}
        path: ${{ inputs.file_name }}.json
        retention-days: 1
