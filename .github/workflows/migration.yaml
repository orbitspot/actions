name: Migration
on:
  workflow_call:
    inputs:
      module:
        required: true
        type: string
      run_command:
        required: true
        type: string
      grafana_tag:
        required: true
        type: string

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

env: # global env
  AWS_ROLE_NAME: ${{ vars.AWS_ROLE_NAME }}
  AWS_REGION: ${{ vars._AWS_REGION }}

jobs:
  setup-config:
    name: Set Up Config
    runs-on: ['${{ github.ref_name }}', '${{ inputs.module }}', linux, self-hosted, x64]
    environment: ${{ github.ref_name }}
    outputs:
      CLUSTER_REGION: '${{ steps.set-output.outputs.CLUSTER_REGION }}'
      CLUSTER_NAME: '${{ steps.set-output.outputs.CLUSTER_NAME }}'
      ENV: '${{ steps.set-output.outputs.ENV }}'
    steps:
      - name: Set up
        id: set-output
        uses:  orbitspot/actions/.github/actions/setup-config@v20.6.1
        with:
          setup: 'migration'
          repo_vars: '${{ toJson(vars) }}'
          devops_config: '${{ vars._DEVOPS_CONFIG }}'

  building:
    name: Building
    runs-on: [ '${{ github.ref_name }}', '${{ inputs.module }}', linux, self-hosted, x64]
    needs: [setup-config]
    permissions:
      id-token: write
      contents: read
    env:
      AWS_ACCOUNT_NUMBER: ${{ vars.AWS_ACCOUNT_NUMBER }}
    steps:
      - name: Building
        uses: orbitspot/actions/.github/actions/package-manager-install@v20.6.1
        with:
          node_version: '20'
          customized_dockerfile: '${{ inputs.dockerfile_path  }}'

  generate-docker:
    name: Docker Build
    runs-on: [ '${{ github.ref_name }}', '${{ inputs.module }}', linux, self-hosted, x64]
    environment: ${{ github.ref_name }}
    needs: [setup-config, building]
    permissions:
      id-token: write
      contents: read
    env:
      CLUSTER_REGION: '${{ needs.setup-config.outputs.CLUSTER_REGION }}'
      AWS_ACCOUNT_NUMBER: ${{ vars.AWS_ACCOUNT_NUMBER }}
    steps:
      - name: Authenticate
        uses: orbitspot/actions/.github/actions/generate-docker@v20.6.1
        with:
          deployment_name: migration
          dockerfile_path: ${{ inputs.dockerfile_path }}
          version: '20'
          build_args: '--build-arg sha=${{ github.sha }} --build-arg RUNNER=migration'
          before_building: |
            echo "${{ inputs.run_command }}" >> migration.sh
            cat migration.sh

  prepare-helm-replacements:
    name: Building Helm Values
    runs-on: [ '${{ github.ref_name }}', '${{ inputs.module }}', linux, self-hosted, x64]
    environment: ${{ github.ref_name }}
    needs: [setup-config, generate-docker]
    permissions:
      id-token: write
      contents: read
    env:
      ACM_ARN: '${{ needs.setup-config.outputs.ACM_ARN }}'
      ENV: '${{ needs.setup-config.outputs.ENV }}'
      PROPERTIES: '${{ vars._PROPERTIES_MIGRATION }}'
    steps:
      - name: Preparar values.yaml
        id: prepare_helm
        uses: orbitspot/actions/.github/actions/prepare-helm-chart-values@v20.6.1
        with:
          deployment_name: migration
          grafana_tag: ${{ inputs.grafana_tag }}
        env:
          MODULE: ${{ inputs.module }}
          BROKER_AMQP: ${{ secrets.BROKER_AMQP }}
          DB_PORT: ${{ vars.DB_PORT }}
          DB_HOST: ${{ vars.DB_HOST }}
          VARS: ${{ toJson(vars) }}
          SECRETS: ${{ toJson(secrets) }}

  helm-CD-migration:
    name: K8s Deploy Migration
    runs-on: [ '${{ github.ref_name }}', '${{ inputs.module }}', linux, self-hosted, x64]
    environment: '${{ github.ref_name }}'
    needs: [setup-config, prepare-helm-replacements]
    permissions:
      id-token: write
      contents: read
    env:
      CLUSTER_REGION: '${{ needs.setup-config.outputs.CLUSTER_REGION }}'
      CLUSTER_NAME: '${{ needs.setup-config.outputs.CLUSTER_NAME }}'
      ENV: '${{ needs.setup-config.outputs.ENV }}'
      AWS_ACCOUNT_NUMBER: ${{ vars.AWS_ACCOUNT_NUMBER }}
    steps:
      - name: helm-apply
        uses: orbitspot/actions/.github/actions/helm-deploy@v20.6.1
        with:
          namespace: '${{ github.event.repository.name }}'
          helm_values: helm-values-migration
          release: migration
          chart_name: orbitspot/orbitspot-terraform
          chart_version: 0.3.5
          sets: |
            --set environment=${{ env.ENV}} \
            --set region=${{ env.CLUSTER_REGION }} \
            --set 'containers[0].repository.image=${{ vars.AWS_ACCOUNT_NUMBER}}.dkr.ecr.${{ env.CLUSTER_REGION }}.amazonaws.com/migration-${{ github.event.repository.name }}' \
            --set 'containers[0].repository.tag=${{ github.sha }}'
      
      - name: Clean up machine
        shell: bash
        run: |
          rm -rf /opt/actions-runner/_work/${{ github.repository }}/*
          df -h