name: Validar Workflows dos Reposit√≥rios

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Vers√£o do workflow reusable (ex: v1.0.0)'
        required: true
        type: string

jobs:
  disparar-e-validar:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repositorio:
          - infra-api-example
          - infra-api-consumer-example
          - infra-scaledjob-example
          - infra-api-migration-example
          - infra-frontend-example
          - infra-landingpage-example

    steps:
      - name: Atualizar vers√£o do workflow reusable
        run: |
          repo="${{ matrix.repositorio }}"
          version="${{ github.event.inputs.version }}"

          echo "üîÑ Clonando reposit√≥rio $repo..."
          git clone --depth 1 "https://x-access-token:${{ secrets.GIT_TOKEN }}@github.com/orbitspot/$repo.git"
          cd "$repo"

          file=".github/workflows/push.yaml"
          if [[ -f "$file" ]]; then
            echo "‚úèÔ∏è  Atualizando vers√£o do workflow reusable para @$version"

            # Substitui qualquer valor ap√≥s @ no uses: orbitspot/actions/.github/workflows/*.yaml@XYZ
            sed -i "s|\(orbitspot/actions/.github/workflows/.*\.yaml\)@[^'\"]\+|\1@$version|g" "$file"

            # Configura o autor do commit
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"

            # Verifica se houve altera√ß√£o antes de commitar
            if git diff --quiet "$file"; then
              echo "‚ÑπÔ∏è  Nenhuma altera√ß√£o detectada em $file. Nenhum commit necess√°rio."
            else
              git add "$file"
              git commit -m "chore: atualiza vers√£o do workflow para @$version"
              git push origin develop -f
              echo "‚úÖ Commit e push realizados com sucesso."
            fi
          else
            echo "‚ö†Ô∏è  Arquivo $file n√£o encontrado no reposit√≥rio $repo"
          fi

      - name: Disparar workflow no reposit√≥rio ${{ matrix.repositorio }}
        run: |
          repo="${{ matrix.repositorio }}"
          branch="develop"  

          echo "üöÄ Disparando workflow via API para $repo..."

          response=$(curl -s -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GIT_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/orbitspot/$repo/actions/workflows/push.yaml/dispatches \
            -d "{\"ref\":\"$branch\"}")

          echo "‚úÖ Workflow disparado no reposit√≥rio $repo"
          echo "üßæ Resposta da API:"
          echo "$response"
