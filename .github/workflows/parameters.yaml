name: Parameters

on:
  workflow_call:
    inputs:
      module:
        required: true
        type: string

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

jobs:
  setup-config:
    name: Set Up Config
    runs-on: [ '${{ github.ref_name }}', '${{ inputs.module }}', linux, self-hosted, x64]
    outputs:
      CLUSTER_REGION: ${{ steps.set-output.outputs.CLUSTER_REGION }}
    steps:
      - name: Fetch devops variables
        id: set-output
        uses: orbitspot/actions/.github/actions/fetch-devops-variables@v18.5
        with:
          devops_config: ${{ vars._DEVOPS_CONFIG }}
          branch: ${{ github.ref_name }}

  create-parameters-vars:
      name: Create parameters
      runs-on: [ '${{ github.ref_name }}', '${{ inputs.module }}', linux, self-hosted, x64]
      environment: ${{ github.ref_name }}
      needs: [setup-config]
      permissions:
        id-token: write
        contents: read
      steps:
        - name: Generate Envs
          id: generate-environments-vars
          uses: orbitspot/actions/.github/actions/parameter-store-environments-backend@v18.5
          with:
            environment_json: ${{ toJson(vars) }}
            file_name: variables

  create-parameters-secrets:
      name: Create parameters secrets
      runs-on: [ '${{ github.ref_name }}', '${{ inputs.module }}', linux, self-hosted, x64]
      environment: ${{ github.ref_name }}
      needs: [setup-config]
      permissions:
        id-token: write
        contents: read
      steps:
        - name: Generate Envs
          id: generate-environments-secrets
          uses: orbitspot/actions/.github/actions/parameter-store-environments-backend@v18.5
          with:
            environment_json: ${{ toJson(secrets) }}
            file_name: secrets

  apply-parameters:
      name: Apply parameters
      runs-on: [ '${{ github.ref_name }}', '${{ inputs.module }}', linux, self-hosted, x64]
      environment: ${{ github.ref_name }}
      needs: [setup-config, create-parameters-vars, create-parameters-secrets]
      env:
        CLUSTER_REGION: ${{ needs.setup-config.outputs.CLUSTER_REGION }}
      permissions:
        id-token: write
        contents: read
      steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: hashicorp/setup-terraform@v3
        name: setup
        with:
          terraform_version: "1.5.0"
              
      - name: Start terraform
        uses: orbitspot/actions/.github/actions/parameter-store@v18.5
        with:
          modulo: '${{ inputs.module }}'
          repository: "${{ github.event.repository.name }}"
          aws_region: "${{ env.CLUSTER_REGION }}"

