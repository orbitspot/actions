name: Protection

on:
  workflow_dispatch:
    inputs:
      repository_name:
        description: "Nome do Repositório que será protegido"
        required: true
        type: string

      branch_name:
        description: "Nome da branch que será utilizada na proteção"
        required: true
        default: master
        type: choice
        options:
          - master
          - develop
          - homolog

concurrency:
  group: '${{ github.workflow }}'
  cancel-in-progress: true

jobs:
  terraform-init:
    name: terraform init
    environment: ${{ github.ref_name }}
    runs-on: [commom, linux, self-hosted, x64]
    permissions:
        id-token: write
        contents: read
    steps:
      - name: Checking parameters
        run: |
          echo "O Repositório escolhido foi: ${{ github.event.inputs.repository_name }}"
          echo "A branch escolhida foi: ${{ github.event.inputs.branch_name }}"
          
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: orbitspot/infra-github-protections
          path: infra-github-protections # nome na pasta de destino dentro do runner
          token: "${{ secrets.GIT_TOKEN }}"
  
      - name: Init terraform
        uses: orbitspot/actions/.github/actions/terraform-init@v9.2
        with:
            terraform_bucket_name: 'terraform-orbit'
            terraform_state_file: 'branch-protections/${{  github.event.inputs.repository_name }}/${{ github.event.inputs.branch_name }}.tfstate'
            aws_account_number: '${{ vars.AWS_ACCOUNT_NUMBER }}'
            aws_role_name: '${{ vars.AWS_ROLE_NAME }}'
            aws_region: 'us-east-1'
            artifact_name: 'terraform'
            terraform_directory: 'infra-github-protections/terraform/'
    
  terraform-plan:
    name: plan
    runs-on: [timeflow, linux, self-hosted, x64]
    environment: ${{ github.ref_name }}
    needs: [terraform-init]
    permissions:
        id-token: write
        contents: read
    steps:
        - name: apply terraform
          uses: orbitspot/actions/.github/actions/terraform-plan@v9.2
          with:
              aws_account_number: ${{ vars.AWS_ACCOUNT_NUMBER }}
              aws_role_name: ${{ vars.AWS_ROLE_NAME }}
              aws_region: 'us-east-1'
          env:
              TF_VAR_repository_name: "${{ github.event.inputs.branch_name }}"
              TF_VAR_branch_pattern: "${{ github.event.inputs.repository_name }}"
              TF_VAR_token: "${{ secrets.GIT_TOKEN }}"
              TF_VAR_GITHUB_OWNER: "${{ github.repository_owner }}"

  terraform-apply:
      name: apply
      runs-on: [timeflow, linux, self-hosted, x64]
      environment: ${{ github.ref_name }}
      needs: [terraform-plan]
      permissions:
          id-token: write
          contents: read
      steps:
          - name: apply terraform
            uses: orbitspot/actions/.github/actions/terraform-apply@v9.2
            with:
                aws_account_number: ${{ vars.AWS_ACCOUNT_NUMBER }}
                aws_role_name: ${{ vars.AWS_ROLE_NAME }}
                aws_region: 'us-east-1'
            env:
                TF_VAR_repository_name: "${{ github.event.inputs.branch_name }}"
                TF_VAR_branch_pattern: "${{ github.event.inputs.repository_name }}"
                TF_VAR_token: "${{ secrets.GIT_TOKEN }}"
                TF_VAR_GITHUB_OWNER: "${{ github.repository_owner }}"


      # - name: Terraform Init
      #   shell: bash
      #   env:
      #     TF_VAR_repository_name: "${{ github.event.inputs.branch_name }}"
      #     TF_VAR_branch_pattern: "${{ github.event.inputs.repository_name }}"
      #     TF_VAR_token: "${{ secrets.GIT_TOKEN }}"
      #     TF_VAR_GITHUB_OWNER: "${{ github.repository_owner }}"
      #   run: |
      #     cd infra-github-protections/terraform/
      #     terraform init -backend-config=bucket=terraform-orbit -backend-config=key=branch-protections/${{  github.event.inputs.repository_name }}/${{ github.event.inputs.branch_name }}.tfstate -backend-config=region=us-east-1 -no-color
    
      # - name: Terraform Plan
      #   shell: bash
      #   env:
      #     TF_VAR_repository_name: "${{ github.event.inputs.repository_name }}"
      #     TF_VAR_branch_pattern: "${{ github.event.inputs.branch_name }}"
      #     TF_VAR_token: "${{ secrets.GIT_TOKEN }}"
      #     TF_VAR_GITHUB_OWNER: "${{ github.repository_owner }}"
      #   run: |
      #     cd infra-github-protections/terraform/
      #     terraform plan -no-color
    
      # - name: Terraform Apply
      #   shell: bash
      #   env:
      #     TF_VAR_repository_name: "${{ github.event.inputs.repository_name }}"
      #     TF_VAR_branch_pattern: "${{ github.event.inputs.branch_name }}"
      #     TF_VAR_token: "${{ secrets.GIT_TOKEN }}"
      #     TF_VAR_GITHUB_OWNER: "${{ github.repository_owner }}"
      #   run: |
      #     cd infra-github-protections/terraform/
      #     terraform apply -auto-approve -no-color
