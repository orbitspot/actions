name: Push node

on:
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

jobs:
    setup-config:
      name: Set Up Config
      runs-on: ubuntu-latest
      outputs:
        CLUSTER_REGION: '${{ steps.set-output.outputs.CLUSTER_REGION }}'
        CLUSTER_NAME: '${{ steps.set-output.outputs.CLUSTER_NAME }}'
        ACM_ARN: '${{ steps.set-output.outputs.ACM_ARN }}'
        ENV: '${{ steps.set-output.outputs.ENV }}'
      steps:
        - name: Fetch devops variables
          id: set-output
          uses: orbitspot/actions/.github/actions/fetch-devops-variables@v18.9
          with:
            devops_config: '${{ vars._DEVOPS_CONFIG }}'
            branch: 'develop'
    
    create-service-account-role:
        name: Creating Aws Resources
        runs-on: ubuntu-latest
        environment: develop
        needs: [setup-config]
        permissions:
            id-token: write
            contents: read
        env:
          CLUSTER_REGION: '${{ needs.setup-config.outputs.CLUSTER_REGION }}'
          CLUSTER_NAME: '${{ needs.setup-config.outputs.CLUSTER_NAME }}'
          ENV: '${{ needs.setup-config.outputs.ENV }}'
        steps:
            - name: create-role
              uses: orbitspot/actions/.github/actions/create-role-service-account@v18.9
              with:
                  role: 'events-exporter-${{ env.ENV }}'
                  namespace: events-exporter
                  service_account_name: 'application-permission'
                  aws_account_number: ${{ vars.AWS_ACCOUNT_NUMBER }}
                  aws_role_name: ${{ vars.AWS_ROLE_NAME }}
                  aws_region: ${{ vars._AWS_REGION }}
                  policy: ${{ vars._POLICY_JSON }}

            - name: create-namespace
              uses: orbitspot/actions/.github/actions/create-namespace-and-service-account@v18.9
              with:
                  aws_account_number: ${{ vars.AWS_ACCOUNT_NUMBER }}
                  aws_role_name: ${{ vars.AWS_ROLE_NAME }}
                  aws_region: ${{ env.CLUSTER_REGION }}
                  cluster_name: ${{ env.CLUSTER_NAME }}
                  namespace: events-exporter
                  role_arn: 'arn:aws:iam::${{ vars.AWS_ACCOUNT_NUMBER }}:role/events-exporter-${{ env.ENV }}'
                  service_account_name: 'application-permission'
