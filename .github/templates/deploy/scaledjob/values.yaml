module: <GRAFANA-TAG>

nodeSelector:
  nodegroup-type: ${.<NOME-REPOSITORIO>.build.service.node_selector}

csiSecrets:
  enabled: true
  serviceAccountName: "application-permission"

containers:
  - name: consumer
    resources:
      requests:
        cpu: ${.<NOME-REPOSITORIO>.build.<DEPLOYMENT-NAME>.resources.requests.cpu}
        memory: ${.<NOME-REPOSITORIO>.build.<DEPLOYMENT-NAME>.resources.requests.memory}
      limits:
        cpu: ${.<NOME-REPOSITORIO>.build.<DEPLOYMENT-NAME>.resources.limits.cpu}
        memory: ${.<NOME-REPOSITORIO>.build.<DEPLOYMENT-NAME>.resources.limits.memory}


keda:
  secrets:
    name: consumer-<NOME-REPOSITORIO>
    data:
      rabbitmq_http_host: ${.<NOME-REPOSITORIO>.build.<DEPLOYMENT-NAME>.rabbitmq_http_host_base64}

  authentication:
    name: consumer-<NOME-REPOSITORIO>
    spec:
      secretTargetRef:
        - key: rabbitmq_http_host
          name: consumer-<NOME-REPOSITORIO>
          parameter: host

  pollingInterval: 30
  maxReplicaCount: ${.<NOME-REPOSITORIO>.build.<DEPLOYMENT-NAME>.keda.maxReplicaCount}
  failedJobsHistoryLimit: ${.<NOME-REPOSITORIO>.build.<DEPLOYMENT-NAME>.keda.failedJobsHistoryLimit}
  successfulJobsHistoryLimit: ${.<NOME-REPOSITORIO>.build.<DEPLOYMENT-NAME>.keda.successfulJobsHistoryLimit}

  triggers:
    - type: rabbitmq
      authenticationRef:
        name: consumer-<NOME-REPOSITORIO>
      metadata:
        protocol: amqp
        queueName: ${.<NOME-REPOSITORIO>.build.<DEPLOYMENT-NAME>.queue_name}
        mode: QueueLength
        value: ${.<NOME-REPOSITORIO>.build.<DEPLOYMENT-NAME>.queue_min_messages}

service:
  type: ClusterIP
